type Fraccion @model @auth(rules: [{allow: public}]) {
  id: ID!
  Titulo: String
  Valor: Float
  dimensionfraccion: Int
  vendido: Boolean
  preciopormetro: Float
}

type Apartament @model @auth(rules: [{allow: public}]) {
  id: ID!
  Propiedads: [Propiedad] @hasMany(indexName: "byApartament", fields: ["id"])
  m2: String
  valor: Float
  fracciones: String
  Compradors: [Comprador] @manyToMany(relationName: "ApartamentComprador")
  Agentes: Agentes @hasOne
  torres: [Torre] @manyToMany(relationName: "TorreApartament")
}

type Torre @model @auth(rules: [{allow: public}]) {
  id: ID!
  Apartament: Apartament @hasOne
  Propiedad: Propiedad @hasOne
  titulodelatorre: String
  numero: String
  Apartaments: [Apartament] @manyToMany(relationName: "TorreApartament")
}

type Tipoid {
  Cedula: String
  Pasaporte: String
  Licencia: String
  DNi: String
}

type Agentes @model @auth(rules: [{allow: public}]) {
  id: ID!
  nombre: String
  email: AWSEmail
  telefono: AWSPhone
  direccion: String
  identificacion: Tipoid
  Propiedads: [Propiedad] @hasMany(indexName: "byAgentes", fields: ["id"])
  Compradors: [Comprador] @hasMany(indexName: "byAgentes", fields: ["id"])
}

type Propiedad @model @auth(rules: [{allow: public}]) {
  id: ID!
  untitledfield: String
  Comprador: Comprador @hasOne
  titulo: String
  Descripcioncorta: String
  Descripcionlarga: String
  Preciototal: Float
  Precioporfraccion: Float
  Imagendestacada: String
  imagenessecundarias: [String]
  agentesID: ID! @index(name: "byAgentes")
  apartamentID: ID! @index(name: "byApartament")
}

type Comprador @model @auth(rules: [{allow: public}]) {
  id: ID!
  Nombre: String!
  fotoperfil: String
  apellido: String
  Tipoidentificacion: Tipoid
  numeroidentificacion: String
  ciudad: String
  Estado: String
  Pais: String
  Propiedad: Propiedad @belongsTo
  agentesID: ID! @index(name: "byAgentes")
  Vendedor: Agentes @belongsTo(fields: ["agentesID"])
  apartaments: [Apartament] @manyToMany(relationName: "ApartamentComprador")
}